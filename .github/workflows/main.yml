name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  # Changeset check - only runs on PRs
  changeset-check:
    name: Check for Changesets
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Check for changesets
        run: |
          # Skip changeset check for automated version PRs
          if [[ "${{ github.head_ref }}" == "changeset-release/"* ]]; then
            echo "Skipping changeset check for automated release PR"
            exit 0
          fi

          # Run changeset status to check if there are any changesets
          npm run changeset:status || {
            echo "::error::No changeset found. Please add a changeset by running 'npm run changeset' and commit the result."
            echo "::error::If this PR doesn't require a release (e.g., docs, tests, or build tools only), run 'npm run changeset -- --empty' to create an empty changeset."
            exit 1
          }

  # Linting and formatting - runs after changeset check on PRs, immediately on main
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    needs: [changeset-check]
    if: always() && (github.event_name == 'push' || needs.changeset-check.result == 'success')
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Check file size limit
        run: npm run check:file-size

  # Test on Node.js - runs after changeset check on PRs, immediately on main
  test-node:
    name: Test on Node.js
    runs-on: ubuntu-latest
    needs: [changeset-check]
    if: always() && (github.event_name == 'push' || needs.changeset-check.result == 'success')
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  # Test on Bun - runs after changeset check on PRs, immediately on main
  test-bun:
    name: Test on Bun
    runs-on: ubuntu-latest
    needs: [changeset-check]
    if: always() && (github.event_name == 'push' || needs.changeset-check.result == 'success')
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Run tests
        run: bun test

  # Test on Deno - runs after changeset check on PRs, immediately on main
  test-deno:
    name: Test on Deno
    runs-on: ubuntu-latest
    needs: [changeset-check]
    if: always() && (github.event_name == 'push' || needs.changeset-check.result == 'success')
    steps:
      - uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Run tests
        run: deno test --allow-read

  # Release - only runs on main after tests pass
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [lint, test-node, test-bun, test-deno]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npm run changeset:publish
          version: npm run changeset:version
          commit: 'chore: version packages'
          title: 'chore: version packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM (summary)
        if: steps.changesets.outputs.published == 'true'
        run: |
          echo "Published packages:"
          echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[] | "- \(.name)@\(.version)"'
